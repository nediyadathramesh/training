1. Subquery in WHERE clause
Use Case: Get all employees who work in the 'IT' department.

sql
Copy
Edit
SELECT name
FROM employees
WHERE department_id = (
    SELECT id FROM departments WHERE name = 'IT'
);
 2. Subquery in SELECT clause
Use Case: List all employees with their department name.

sql
Copy
Edit
SELECT 
    name,
    (SELECT name FROM departments WHERE id = employees.department_id) AS department_name
FROM employees;

 3. Subquery in FROM clause
Use Case: Get the average salary by department.

sql
Copy
Edit
SELECT department_id, AVG(salary) AS avg_salary
FROM (
    SELECT department_id, salary FROM employees
) AS dept_salaries
GROUP BY department_id;

4. Correlated Subquery
Use Case: Find employees whose salary is above the average salary of their department.

sql
Copy
Edit
SELECT name, salary, department_id
FROM employees e
WHERE salary > (
    SELECT AVG(salary)
    FROM employees
    WHERE department_id = e.department_id
);

5. IN with Subquery
Use Case: Find employees who are in the 'Sales' or 'Marketing' departments.

sql
Copy
Edit
SELECT name
FROM employees
WHERE department_id IN (
    SELECT id FROM departments WHERE name IN ('Sales', 'Marketing')
);

 6. EXISTS with Subquery
Use Case: List departments that have at least one employee.

sql
Copy
Edit
SELECT name
FROM departments d
WHERE EXISTS (
    SELECT 1 FROM employees e WHERE e.department_id = d.id
);

